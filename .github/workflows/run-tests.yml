name: Run Backend Tests (Manual)

# Manual trigger only - independent of deployments
# Develop branch still auto-deploys to Render regardless of test status
on:
  workflow_dispatch:
    inputs:
      coverage_threshold:
        description: 'Minimum coverage percentage required'
        required: false
        type: number
        default: 40

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with coverage
      env:
        FLASK_ENV: testing
        TEST_SCHEMA: test_schema
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        FLASK_SECRET_KEY: ${{ secrets.FLASK_SECRET_KEY }}
      run: |
        cd backend
        pytest tests/ -v --cov=. --cov-report=term-missing --cov-report=html --cov-report=xml

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-${{ github.run_number }}
        path: backend/htmlcov/
        retention-days: 30

    - name: Check coverage threshold
      run: |
        cd backend
        pytest tests/ --cov=. --cov-fail-under=${{ inputs.coverage_threshold }} -q

    - name: Test Results Summary
      if: always()
      run: |
        echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "**Coverage Threshold:** ${{ inputs.coverage_threshold }}%" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Test Schema:** test_schema (isolated from dev/prod)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "⬇️ Download coverage report from artifacts below" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Note:** This workflow is independent of deployment. The develop branch auto-deploys to Render regardless of test status." >> $GITHUB_STEP_SUMMARY
